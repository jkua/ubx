#!/bin/bash

DATETIME=`date -u +'%Y%m%dT%H%M%SZ'`

# Defaults
DEVICE=/dev/ttyHSL2
RATE=115200
CONFIGURE=0
RESETFLAG=

show_help() {
    echo
    echo "Usage: stream [-d DEVICE] [-r RATE] [-n] [DIRECTORY]"
    echo 
    echo "    DIRECTORY    Path to save the output file. Defaults to the current directory."
    echo "    -d DEVICE    Specify the device path. Defaults to /dev/ttyHSL2."
    echo "                 On OS X with a USB connection, should be /dev/cu.usbmodem*"
    echo "    -r RATE      Specify the baud rate. Should be 9600 or 115200."
    echo "                 Defaults to 115200."
    echo "    -c           Configure the ublox message output."
    echo "    -C           Configure the ublox message output and reset to default config."
    echo 
}

OPTIND=1         # Reset in case getopts has been used previously in the shell.

while getopts "nh?d:r:cC" opt; do
    case "$opt" in
    h|\?)
        show_help
        exit 0
        ;;
    d)  DEVICE=$OPTARG
        ;;
    r)  
        RATE=$OPTARG
        ;;
    c)
        CONFIGURE=1
        ;;
    C)
        CONFIGURE=1
        RESETFLAG=-R;
        ;;
    esac
done
shift $(($OPTIND - 1))

if [ ! -e $DEVICE ]; then
    echo 
    echo "*** ${DEVICE} does not exist!"
    echo 
    exit 0
fi

if [ ! -c $DEVICE ]; then
    echo 
    echo "*** ${DEVICE} is not a character device!"
    echo 
    exit 0
fi

case "$RATE" in
    9600) ;;
    115200) ;;
    *) 
        echo 
        echo "*** Invalid baud rate!"
        show_help
        exit 0
        ;;
esac

if [ $# -eq 0 ]; then
    OUTPUT_PATH=.
else
    OUTPUT_PATH=$1
fi

if [ $CONFIGURE == 1 ]; then
    ./configure -d $DEVICE -r $RATE $RESETFLAG
    if [ $? -eq 1 ]
    then
        exit 1
    fi
fi

stty -F $DEVICE $RATE

./stream.py --device $DEVICE